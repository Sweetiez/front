name: Push workflow

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16.x
          cache: npm
      - run: npm install --force
      - run: npm run lint:check
      - run: npm run format:check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16.x
          cache: npm
      - run: npm install --force
      - run: npm run build

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image (no push)
        uses: docker/build-push-action@v2

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint Commit
        uses: wagoid/commitlint-github-action@v4.1.1

  devpublish:
    name: Publish on dev server
    needs: [lint, build, docker, commitlint]
    if: github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            REACT_APP_API_ENDPOINT=${{ secrets.SWEETIEZ_API_ENDPOINT_DEV }}
            REACT_APP_BASE_URL=${{ secrets.SWEETIEZ_APP_BASE_URL_DEV }}
            REACT_APP_WEBSOCKET_API_ENDPOINT=${{ secrets.SWEETIEZ_WEBSOCKET_API_ENDPOINT_DEV }}
            REACT_APP_STRIPE_PUBLISHABLE_KEY=${{ secrets.SWEETIEZ_STRIPE_PUBLISHABLE_KEY_DEV }}
            REACT_APP_LIVE_STUN_URL=${{ secrets.SWEETIEZ_STUN_URL }}
            REACT_APP_LIVE_TURN_URL=${{ secrets.SWEETIEZ_TURN_URL }}
            REACT_APP_LIVE_TURN_USER=${{ secrets.SWEETIEZ_TURN_USER }}
            REACT_APP_LIVE_TURN_PASSWORD=${{ secrets.SWEETIEZ_TURN_PASSWORD }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/front:latest-dev

      - name: Deploy on DEV server
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.WEBHOOK_DEV_SERVER_URL }}
          method: POST

  release:
    name: Publish new release
    needs: [lint, build, docker, commitlint]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 14
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release